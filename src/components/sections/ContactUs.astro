---
interface Props {
  title: string;
}

const site = Astro.site;
const { title } = Astro.props;
---

<!-- ============================================ --><!--                   Contact                    --><!-- ============================================ -->
<div
  id="contact"
  class="w-full min-h-screen flex flex-col justify-center items-center bg-white"
>
  <div class="cs-container w-full xl:w-1/3 px-4 sm:px-0">
    <picture class="cs-picture">
      <!--Mobile Image-->
      <source
        media="(max-width: 600px)"
        srcset={`${site}denly_landing_page/img/sending.png`}
      />
      <!--Tablet and above Image-->
      <source
        media="(min-width: 601px)"
        srcset={`${site}denly_landing_page/img/sending.png`}
      />
      <img
        loading="lazy"
        decoding="async"
        src={`${site}denly_landing_page/img/sending.png`}
        alt="friends"
        width="904"
        height="754"
      />
    </picture>
    <div class="cs-right">
      <div class="cs-content">
        <span class="cs-topper">{title}</span>
        <h2 class="cs-title">What's on your mind?</h2>
      </div>
      <!--Form-->
      <form
        class="cs-form"
        id="cs-form-587-984"
        name="Contact Form"
        method="POST"
        action="https://formspree.io/f/mwkgyajv"
      >
        <label class="cs-label">
          Name
          <input
            class="cs-input"
            required
            type="text"
            id="name-587-984"
            name="name"
            placeholder="Name"
          />
        </label>
        <label class="cs-label">
          Phone
          <input
            class="cs-input"
            required
            type="tel"
            id="phone-587-984"
            name="phone"
            placeholder="Phone"
            pattern="[0-9]{10}"
          />
        </label>
        <label class="cs-label">
          Email
          <input
            class="cs-input"
            required
            type="email"
            id="email-587-984"
            name="email"
            placeholder="Email"
            pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}"
          />
        </label>
        <label class="cs-label cs-message">
          Message
          <textarea
            class="cs-input cs-textarea"
            required
            name="Message"
            id="message-587-984"
            placeholder="Write message..."></textarea>
        </label>
        <button class="cs-button-solid cs-submit" type="submit">Send</button>
      </form>
    </div>
  </div>
</div>

<style>
  /*-- -------------------------- -->
<---          Contact           -->
<--- -------------------------- -*/

  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #contact {
      padding-top: 5rem;
      position: relative;
      z-index: 1;
    }
    #contact .cs-container {
      width: 100%;
      max-width: 80rem;
      margin: auto;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      gap: 3rem;
    }
    #contact .cs-content {
      /* set text aling to left if content needs to be left aligned */
      text-align: center;
      width: 100%;
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: center;
    }

    #contact .cs-title {
      margin: 0;
    }
    #contact .cs-right {
      width: 100%;
      /* changes to 630px at desktop */
      max-width: 36.5rem;
      /* moved section padding to the content so the picture can be full width */
      padding: var(--sectionPadding);
      padding-top: 0;
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 2.5rem;
    }
    #contact .cs-form {
      width: 100%;
      padding: 0;
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
      align-items: center;
      flex-direction: column;
      gap: 0.75rem;
    }
    #contact .cs-label {
      font-size: 1rem;
      width: 100%;
      color: var(--headerColor);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      gap: 0.5rem;
    }
    #contact .cs-input {
      font-size: 1rem;
      width: 100%;
      height: 3.5rem;
      padding: 0;
      padding-left: 1.5rem;
      color: var(--headerColor);
      background-color: #f7f7f7;
      border: none;
      /* prevents padding from adding to height and width */
      box-sizing: border-box;
      transition: border-color 0.3s;
    }
    #contact .cs-input:hover {
      border-color: var(--secondary);
    }
    #contact .cs-input:focus {
      outline: 1px solid var(--secondary);
    }
    #contact .cs-input::placeholder {
      color: #767676;
      opacity: 0.8;
    }
    #contact .cs-textarea {
      min-height: 7.5rem;
      padding-top: 1.5rem;
      margin-bottom: 1.75rem;
      font-family: inherit;
    }
    #contact .cs-button-solid {
      font-size: 1rem;
      /* 46px - 56px */
      line-height: clamp(2.875rem, 5.5vw, 3.5rem);
      text-decoration: none;
      font-weight: 700;
      text-align: center;
      margin: 0;
      color: #fff;
      min-width: 9.375rem;
      padding: 0 2rem;
      background-color: var(--primary);
      display: inline-block;
      position: relative;
      z-index: 1;
      /* prevents padding from adding to the width */
      box-sizing: border-box;
    }
    #contact .cs-button-solid:before {
      content: "";
      position: absolute;
      height: 100%;
      width: 0%;
      background: #000;
      opacity: 1;
      top: 0;
      left: 0;
      z-index: -1;
      transition: width 0.3s;
    }
    #contact .cs-button-solid:hover:before {
      width: 100%;
    }
    #contact .cs-submit {
      min-width: 13.375rem;
      border: none;
      border-radius: 0;
    }
    #contact .cs-submit:hover {
      cursor: pointer;
    }
    #contact .cs-picture {
      display: block;
      position: relative;
      width: 100%;
      /* 360px - 600px */
      height: clamp(22.5rem, 100vw, 37.5rem);
    }
    #contact .cs-picture img {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      object-fit: contain;
    }
  }
  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #contact {
      padding: var(--sectionPadding);
      position: relative;
    }
    #contact .cs-container {
      flex-direction: row;
      justify-content: flex-end;
    }
    #contact .cs-form {
      max-width: 39.375rem;
    }
    #contact .cs-content {
      text-align: left;
      align-items: flex-start;
    }
    #contact .cs-form {
      align-items: flex-start;
    }
    #contact .cs-picture {
      position: absolute;
      height: 100%;
      width: 44%;
      right: 50%;
      /* 70px - 88px */
      margin-right: clamp(4.375rem, 7vw, 5.5rem);
    }
    #contact .cs-right {
      width: 50%;
      max-width: 39.375rem;
      padding: 0;
    }
  }
</style>
